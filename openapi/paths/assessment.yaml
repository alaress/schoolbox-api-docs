get:
  operationId: assessmentSearch
  tags: [assessment]
  summary: Get a list of assessments
  description: |
    This endpoint will return assessments and their results that match the filter provided. 
    The number of assessments returned is 5 by default, if the limit query parameter is not provided.
    There is a maximum limit of 500 assessments per request.
    We strongly recommend the use of due date filters, to ensure you only get relevant assessments from the current period.
    For example a common request may be to get assessments of work type 'major' that are due in the current year. 
    
    The endpoint is only available to superusers.
  responses:
    '200':
      $ref: ../components/responses/assessment-list.yaml
    default:
      $ref: ../components/responses/problem.yaml

parameters:
  - name: filter
    in: query
    required: true
    description: |
      URL-encoded JSON object consisting of fields and values to filter assessments on.

      Example 1:

      JSON filter: \
      `{"dueDate":{"from":"2025-01-01T00:00:00+10:00"}}`

      URL-encoded JSON filter: \
      `%7B%22dueDate%22%3A%7B%22from%22%3A%222025-01-01T00%3A00%3A00%2B10%3A00%22%7D%7D`

      Example 2:

      JSON filter: \
      `{"assessmentId": 256,"title": "English 3/4 [Final]","assessmentType": "dueWork","folder": [{“id”: 80}],"weighted": false,"workType": {"id": 1,"name": "Formative Assessment"},"dueDate": {"from": "2017-10-12T14:20:50+10:00","to": "2019-10-12T14:20:50+10:00"},"yearLevel": {"id": 6,"name": "Year 6"}}`

      URL-encoded JSON filter: \
      `%7B%22assessmentId%22%3A%20256%2C%22title%22%3A%20%22English%203%2F4%20%5BFinal%5D%22%2C%22assessmentType%22%3A%20%22dueWork%22%2C%22folder%22%3A%20%5B%7B%22id%22%3A%2080%7D%5D%2C%22weighted%22%3A%20false%2C%22workType%22%3A%20%7B%22id%22%3A%201%2C%22name%22%3A%20%22Formative%20Assessment%22%7D%2C%22dueDate%22%3A%20%7B%22from%22%3A%20%222017-10-12T14%3A20%3A50%2B10%3A00%22%2C%22to%22%3A%20%222019-10-12T14%3A20%3A50%2B10%3A00%22%7D%2C%22yearLevel%22%3A%20%7B%22id%22%3A%206%2C%22name%22%3A%20%22Year%206%22%7D%7D`
      
      --

      The full URL to use either of the above examples will look like this:
      [base URL]/api/assessment?filter=[URL-encoded JSON filter]
    schema:
      type: object
      properties:
        assessmentId:
          description: |
            The ID of the assessment to search.
          type: integer
          example: 256
        title:
          type: string
          description: |
            A part of title to filter assessments on.
          example: English 3/4 [Final]
        assessmentType:
          description: The type of assessments to filter on.
          type: string
          enum:
            - task
            - quiz
            - dueWork
            - LTI
            - project
          example: dueWork
        folder:
          oneOf:
            - type: array
              description: |
                An array of objects, each of which specifies either an "id" or a "code".
              items:
                oneOf:
                  - type: object
                    properties:
                      id:
                        description: ID of the folder containing the assessment.
                        type: integer
                        example: 80
                    required:
                      - id
                  - type: object
                    properties:
                      code:
                        description: Code of the folder containing the assessment.
                        type: string
                        example: 9ENGA
                    required:
                      - code
            - type: object
              deprecated: true
              description: |
                (Deprecated)
              properties:
                id:
                  type: integer
                  description: ID of the folder containing the assessment.
                  example: 80
              required:
                - id
        subjectCode:
          type: array
          items:
            type: string
            description: |
              The Course Subject Code.
        weighted:
          type: boolean
          example: false
          description: |
            Limit assessments to only those that have a weight set.
        workType:
          type: object
          description: |
            Select either one of the following fields to filter on:
          properties:
            id:
              type: integer
              description: The DB identifier of the worktype.
              example: 1
            name:
              type: string
              description: The name of the work type, may not be unique.
              example: Formative Assessment
        dueDate:
          type: object
          properties:
            from:
              type: string
              format: date-time
              description: |
                An RFC3339 time string including timezone eg. 2017-10-12T14:20:50+10:00
              example: '2017-10-12T14:20:50+10:00'
            to:
              type: string
              format: date-time
              description: |
                An RFC3339 time string including timezone eg. 2017-10-12T14:20:50+10:00
              example: '2019-10-12T14:20:50+10:00'
        yearLevel:
          type: object
          description: |
            Select either one of the following fields to filter on year levels associated with folder:
          properties:
            id:
              type: integer
              description: The db identifier of the yearlevel.
              example: 6
            name:
              type: string
              description: The name of the year level, may not be unique.
              example: Year 6
        project:
          type: object
          properties:
            id:
              type: integer
              description: ID of the parent assessment (project).
              example: 255
  - $ref: ../components/parameters/cursor.yaml
  - $ref: ../components/parameters/limit.yaml
